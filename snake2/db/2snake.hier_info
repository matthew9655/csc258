|snake_2
KEY[0] => resetn.IN1
KEY[1] => start.IN1
KEY[2] => ~NO_FANOUT~
KEY[3] => ~NO_FANOUT~
CLOCK_50 => CLOCK_50.IN1
VGA_HS <= part2:u0.VGA_HS
VGA_VS <= part2:u0.VGA_VS
VGA_BLANK <= part2:u0.VGA_BLANK
VGA_SYNC <= part2:u0.VGA_SYNC
VGA_CLK <= part2:u0.VGA_CLK
VGA_R[0] <= part2:u0.VGA_R
VGA_R[1] <= part2:u0.VGA_R
VGA_R[2] <= part2:u0.VGA_R
VGA_R[3] <= part2:u0.VGA_R
VGA_R[4] <= part2:u0.VGA_R
VGA_R[5] <= part2:u0.VGA_R
VGA_R[6] <= part2:u0.VGA_R
VGA_R[7] <= part2:u0.VGA_R
VGA_R[8] <= part2:u0.VGA_R
VGA_R[9] <= part2:u0.VGA_R
VGA_G[0] <= part2:u0.VGA_G
VGA_G[1] <= part2:u0.VGA_G
VGA_G[2] <= part2:u0.VGA_G
VGA_G[3] <= part2:u0.VGA_G
VGA_G[4] <= part2:u0.VGA_G
VGA_G[5] <= part2:u0.VGA_G
VGA_G[6] <= part2:u0.VGA_G
VGA_G[7] <= part2:u0.VGA_G
VGA_G[8] <= part2:u0.VGA_G
VGA_G[9] <= part2:u0.VGA_G
VGA_B[0] <= part2:u0.VGA_B
VGA_B[1] <= part2:u0.VGA_B
VGA_B[2] <= part2:u0.VGA_B
VGA_B[3] <= part2:u0.VGA_B
VGA_B[4] <= part2:u0.VGA_B
VGA_B[5] <= part2:u0.VGA_B
VGA_B[6] <= part2:u0.VGA_B
VGA_B[7] <= part2:u0.VGA_B
VGA_B[8] <= part2:u0.VGA_B
VGA_B[9] <= part2:u0.VGA_B
PS2_CLK <> part2:u0.PS2_CLK
PS2_DAT <> part2:u0.PS2_DAT


|snake_2|part2:u0
clk => clk.IN6
resetn => resetn.IN3
start => start.IN1
VGA_HS <= vga_adapter:a0.VGA_HS
VGA_VS <= vga_adapter:a0.VGA_VS
VGA_BLANK <= vga_adapter:a0.VGA_BLANK
VGA_SYNC <= vga_adapter:a0.VGA_SYNC
VGA_CLK <= vga_adapter:a0.VGA_CLK
VGA_R[0] <= vga_adapter:a0.VGA_R
VGA_R[1] <= vga_adapter:a0.VGA_R
VGA_R[2] <= vga_adapter:a0.VGA_R
VGA_R[3] <= vga_adapter:a0.VGA_R
VGA_R[4] <= vga_adapter:a0.VGA_R
VGA_R[5] <= vga_adapter:a0.VGA_R
VGA_R[6] <= vga_adapter:a0.VGA_R
VGA_R[7] <= vga_adapter:a0.VGA_R
VGA_R[8] <= vga_adapter:a0.VGA_R
VGA_R[9] <= vga_adapter:a0.VGA_R
VGA_G[0] <= vga_adapter:a0.VGA_G
VGA_G[1] <= vga_adapter:a0.VGA_G
VGA_G[2] <= vga_adapter:a0.VGA_G
VGA_G[3] <= vga_adapter:a0.VGA_G
VGA_G[4] <= vga_adapter:a0.VGA_G
VGA_G[5] <= vga_adapter:a0.VGA_G
VGA_G[6] <= vga_adapter:a0.VGA_G
VGA_G[7] <= vga_adapter:a0.VGA_G
VGA_G[8] <= vga_adapter:a0.VGA_G
VGA_G[9] <= vga_adapter:a0.VGA_G
VGA_B[0] <= vga_adapter:a0.VGA_B
VGA_B[1] <= vga_adapter:a0.VGA_B
VGA_B[2] <= vga_adapter:a0.VGA_B
VGA_B[3] <= vga_adapter:a0.VGA_B
VGA_B[4] <= vga_adapter:a0.VGA_B
VGA_B[5] <= vga_adapter:a0.VGA_B
VGA_B[6] <= vga_adapter:a0.VGA_B
VGA_B[7] <= vga_adapter:a0.VGA_B
VGA_B[8] <= vga_adapter:a0.VGA_B
VGA_B[9] <= vga_adapter:a0.VGA_B
PS2_CLK <> keyboard_tracker:KB0.PS2_CLK
PS2_DAT <> keyboard_tracker:KB0.PS2_DAT


|snake_2|part2:u0|vga_adapter:a0
resetn => resetn.IN1
clock => clock.IN2
colour[0] => colour[0].IN1
colour[1] => colour[1].IN1
colour[2] => colour[2].IN1
x[0] => x[0].IN1
x[1] => x[1].IN1
x[2] => x[2].IN1
x[3] => x[3].IN1
x[4] => x[4].IN1
x[5] => x[5].IN1
x[6] => x[6].IN1
x[7] => x[7].IN1
y[0] => y[0].IN1
y[1] => y[1].IN1
y[2] => y[2].IN1
y[3] => y[3].IN1
y[4] => y[4].IN1
y[5] => y[5].IN1
y[6] => y[6].IN1
plot => writeEn.IN1
VGA_R[0] <= vga_controller:controller.VGA_R
VGA_R[1] <= vga_controller:controller.VGA_R
VGA_R[2] <= vga_controller:controller.VGA_R
VGA_R[3] <= vga_controller:controller.VGA_R
VGA_R[4] <= vga_controller:controller.VGA_R
VGA_R[5] <= vga_controller:controller.VGA_R
VGA_R[6] <= vga_controller:controller.VGA_R
VGA_R[7] <= vga_controller:controller.VGA_R
VGA_R[8] <= vga_controller:controller.VGA_R
VGA_R[9] <= vga_controller:controller.VGA_R
VGA_G[0] <= vga_controller:controller.VGA_G
VGA_G[1] <= vga_controller:controller.VGA_G
VGA_G[2] <= vga_controller:controller.VGA_G
VGA_G[3] <= vga_controller:controller.VGA_G
VGA_G[4] <= vga_controller:controller.VGA_G
VGA_G[5] <= vga_controller:controller.VGA_G
VGA_G[6] <= vga_controller:controller.VGA_G
VGA_G[7] <= vga_controller:controller.VGA_G
VGA_G[8] <= vga_controller:controller.VGA_G
VGA_G[9] <= vga_controller:controller.VGA_G
VGA_B[0] <= vga_controller:controller.VGA_B
VGA_B[1] <= vga_controller:controller.VGA_B
VGA_B[2] <= vga_controller:controller.VGA_B
VGA_B[3] <= vga_controller:controller.VGA_B
VGA_B[4] <= vga_controller:controller.VGA_B
VGA_B[5] <= vga_controller:controller.VGA_B
VGA_B[6] <= vga_controller:controller.VGA_B
VGA_B[7] <= vga_controller:controller.VGA_B
VGA_B[8] <= vga_controller:controller.VGA_B
VGA_B[9] <= vga_controller:controller.VGA_B
VGA_HS <= vga_controller:controller.VGA_HS
VGA_VS <= vga_controller:controller.VGA_VS
VGA_BLANK <= vga_controller:controller.VGA_BLANK
VGA_SYNC <= vga_controller:controller.VGA_SYNC
VGA_CLK <= vga_controller:controller.VGA_CLK


|snake_2|part2:u0|vga_adapter:a0|vga_address_translator:user_input_translator
x[0] => mem_address[0].DATAIN
x[1] => mem_address[1].DATAIN
x[2] => mem_address[2].DATAIN
x[3] => mem_address[3].DATAIN
x[4] => mem_address[4].DATAIN
x[5] => Add1.IN18
x[6] => Add1.IN17
x[7] => Add1.IN16
y[0] => Add0.IN14
y[0] => Add1.IN20
y[1] => Add0.IN13
y[1] => Add1.IN19
y[2] => Add0.IN11
y[2] => Add0.IN12
y[3] => Add0.IN9
y[3] => Add0.IN10
y[4] => Add0.IN7
y[4] => Add0.IN8
y[5] => Add0.IN5
y[5] => Add0.IN6
y[6] => Add0.IN3
y[6] => Add0.IN4
mem_address[0] <= x[0].DB_MAX_OUTPUT_PORT_TYPE
mem_address[1] <= x[1].DB_MAX_OUTPUT_PORT_TYPE
mem_address[2] <= x[2].DB_MAX_OUTPUT_PORT_TYPE
mem_address[3] <= x[3].DB_MAX_OUTPUT_PORT_TYPE
mem_address[4] <= x[4].DB_MAX_OUTPUT_PORT_TYPE
mem_address[5] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[6] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[7] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[8] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[9] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[10] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[11] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[12] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[13] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[14] <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|snake_2|part2:u0|vga_adapter:a0|altsyncram:VideoMemory
wren_a => altsyncram_m6m1:auto_generated.wren_a
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => altsyncram_m6m1:auto_generated.data_a[0]
data_a[1] => altsyncram_m6m1:auto_generated.data_a[1]
data_a[2] => altsyncram_m6m1:auto_generated.data_a[2]
data_b[0] => ~NO_FANOUT~
data_b[1] => ~NO_FANOUT~
data_b[2] => ~NO_FANOUT~
address_a[0] => altsyncram_m6m1:auto_generated.address_a[0]
address_a[1] => altsyncram_m6m1:auto_generated.address_a[1]
address_a[2] => altsyncram_m6m1:auto_generated.address_a[2]
address_a[3] => altsyncram_m6m1:auto_generated.address_a[3]
address_a[4] => altsyncram_m6m1:auto_generated.address_a[4]
address_a[5] => altsyncram_m6m1:auto_generated.address_a[5]
address_a[6] => altsyncram_m6m1:auto_generated.address_a[6]
address_a[7] => altsyncram_m6m1:auto_generated.address_a[7]
address_a[8] => altsyncram_m6m1:auto_generated.address_a[8]
address_a[9] => altsyncram_m6m1:auto_generated.address_a[9]
address_a[10] => altsyncram_m6m1:auto_generated.address_a[10]
address_a[11] => altsyncram_m6m1:auto_generated.address_a[11]
address_a[12] => altsyncram_m6m1:auto_generated.address_a[12]
address_a[13] => altsyncram_m6m1:auto_generated.address_a[13]
address_a[14] => altsyncram_m6m1:auto_generated.address_a[14]
address_b[0] => altsyncram_m6m1:auto_generated.address_b[0]
address_b[1] => altsyncram_m6m1:auto_generated.address_b[1]
address_b[2] => altsyncram_m6m1:auto_generated.address_b[2]
address_b[3] => altsyncram_m6m1:auto_generated.address_b[3]
address_b[4] => altsyncram_m6m1:auto_generated.address_b[4]
address_b[5] => altsyncram_m6m1:auto_generated.address_b[5]
address_b[6] => altsyncram_m6m1:auto_generated.address_b[6]
address_b[7] => altsyncram_m6m1:auto_generated.address_b[7]
address_b[8] => altsyncram_m6m1:auto_generated.address_b[8]
address_b[9] => altsyncram_m6m1:auto_generated.address_b[9]
address_b[10] => altsyncram_m6m1:auto_generated.address_b[10]
address_b[11] => altsyncram_m6m1:auto_generated.address_b[11]
address_b[12] => altsyncram_m6m1:auto_generated.address_b[12]
address_b[13] => altsyncram_m6m1:auto_generated.address_b[13]
address_b[14] => altsyncram_m6m1:auto_generated.address_b[14]
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_m6m1:auto_generated.clock0
clock1 => altsyncram_m6m1:auto_generated.clock1
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= <GND>
q_a[1] <= <GND>
q_a[2] <= <GND>
q_b[0] <= altsyncram_m6m1:auto_generated.q_b[0]
q_b[1] <= altsyncram_m6m1:auto_generated.q_b[1]
q_b[2] <= altsyncram_m6m1:auto_generated.q_b[2]
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|snake_2|part2:u0|vga_adapter:a0|altsyncram:VideoMemory|altsyncram_m6m1:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[0] => ram_block1a6.PORTAADDR
address_a[0] => ram_block1a7.PORTAADDR
address_a[0] => ram_block1a8.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[1] => ram_block1a6.PORTAADDR1
address_a[1] => ram_block1a7.PORTAADDR1
address_a[1] => ram_block1a8.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[2] => ram_block1a6.PORTAADDR2
address_a[2] => ram_block1a7.PORTAADDR2
address_a[2] => ram_block1a8.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[3] => ram_block1a5.PORTAADDR3
address_a[3] => ram_block1a6.PORTAADDR3
address_a[3] => ram_block1a7.PORTAADDR3
address_a[3] => ram_block1a8.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[4] => ram_block1a4.PORTAADDR4
address_a[4] => ram_block1a5.PORTAADDR4
address_a[4] => ram_block1a6.PORTAADDR4
address_a[4] => ram_block1a7.PORTAADDR4
address_a[4] => ram_block1a8.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[5] => ram_block1a2.PORTAADDR5
address_a[5] => ram_block1a3.PORTAADDR5
address_a[5] => ram_block1a4.PORTAADDR5
address_a[5] => ram_block1a5.PORTAADDR5
address_a[5] => ram_block1a6.PORTAADDR5
address_a[5] => ram_block1a7.PORTAADDR5
address_a[5] => ram_block1a8.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[6] => ram_block1a1.PORTAADDR6
address_a[6] => ram_block1a2.PORTAADDR6
address_a[6] => ram_block1a3.PORTAADDR6
address_a[6] => ram_block1a4.PORTAADDR6
address_a[6] => ram_block1a5.PORTAADDR6
address_a[6] => ram_block1a6.PORTAADDR6
address_a[6] => ram_block1a7.PORTAADDR6
address_a[6] => ram_block1a8.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_a[7] => ram_block1a1.PORTAADDR7
address_a[7] => ram_block1a2.PORTAADDR7
address_a[7] => ram_block1a3.PORTAADDR7
address_a[7] => ram_block1a4.PORTAADDR7
address_a[7] => ram_block1a5.PORTAADDR7
address_a[7] => ram_block1a6.PORTAADDR7
address_a[7] => ram_block1a7.PORTAADDR7
address_a[7] => ram_block1a8.PORTAADDR7
address_a[8] => ram_block1a0.PORTAADDR8
address_a[8] => ram_block1a1.PORTAADDR8
address_a[8] => ram_block1a2.PORTAADDR8
address_a[8] => ram_block1a3.PORTAADDR8
address_a[8] => ram_block1a4.PORTAADDR8
address_a[8] => ram_block1a5.PORTAADDR8
address_a[8] => ram_block1a6.PORTAADDR8
address_a[8] => ram_block1a7.PORTAADDR8
address_a[8] => ram_block1a8.PORTAADDR8
address_a[9] => ram_block1a0.PORTAADDR9
address_a[9] => ram_block1a1.PORTAADDR9
address_a[9] => ram_block1a2.PORTAADDR9
address_a[9] => ram_block1a3.PORTAADDR9
address_a[9] => ram_block1a4.PORTAADDR9
address_a[9] => ram_block1a5.PORTAADDR9
address_a[9] => ram_block1a6.PORTAADDR9
address_a[9] => ram_block1a7.PORTAADDR9
address_a[9] => ram_block1a8.PORTAADDR9
address_a[10] => ram_block1a0.PORTAADDR10
address_a[10] => ram_block1a1.PORTAADDR10
address_a[10] => ram_block1a2.PORTAADDR10
address_a[10] => ram_block1a3.PORTAADDR10
address_a[10] => ram_block1a4.PORTAADDR10
address_a[10] => ram_block1a5.PORTAADDR10
address_a[10] => ram_block1a6.PORTAADDR10
address_a[10] => ram_block1a7.PORTAADDR10
address_a[10] => ram_block1a8.PORTAADDR10
address_a[11] => ram_block1a0.PORTAADDR11
address_a[11] => ram_block1a1.PORTAADDR11
address_a[11] => ram_block1a2.PORTAADDR11
address_a[11] => ram_block1a3.PORTAADDR11
address_a[11] => ram_block1a4.PORTAADDR11
address_a[11] => ram_block1a5.PORTAADDR11
address_a[11] => ram_block1a6.PORTAADDR11
address_a[11] => ram_block1a7.PORTAADDR11
address_a[11] => ram_block1a8.PORTAADDR11
address_a[12] => ram_block1a0.PORTAADDR12
address_a[12] => ram_block1a1.PORTAADDR12
address_a[12] => ram_block1a2.PORTAADDR12
address_a[12] => ram_block1a3.PORTAADDR12
address_a[12] => ram_block1a4.PORTAADDR12
address_a[12] => ram_block1a5.PORTAADDR12
address_a[13] => decode_7la:decode2.data[0]
address_a[13] => decode_7la:wren_decode_a.data[0]
address_a[14] => decode_7la:decode2.data[1]
address_a[14] => decode_7la:wren_decode_a.data[1]
address_b[0] => ram_block1a0.PORTBADDR
address_b[0] => ram_block1a1.PORTBADDR
address_b[0] => ram_block1a2.PORTBADDR
address_b[0] => ram_block1a3.PORTBADDR
address_b[0] => ram_block1a4.PORTBADDR
address_b[0] => ram_block1a5.PORTBADDR
address_b[0] => ram_block1a6.PORTBADDR
address_b[0] => ram_block1a7.PORTBADDR
address_b[0] => ram_block1a8.PORTBADDR
address_b[1] => ram_block1a0.PORTBADDR1
address_b[1] => ram_block1a1.PORTBADDR1
address_b[1] => ram_block1a2.PORTBADDR1
address_b[1] => ram_block1a3.PORTBADDR1
address_b[1] => ram_block1a4.PORTBADDR1
address_b[1] => ram_block1a5.PORTBADDR1
address_b[1] => ram_block1a6.PORTBADDR1
address_b[1] => ram_block1a7.PORTBADDR1
address_b[1] => ram_block1a8.PORTBADDR1
address_b[2] => ram_block1a0.PORTBADDR2
address_b[2] => ram_block1a1.PORTBADDR2
address_b[2] => ram_block1a2.PORTBADDR2
address_b[2] => ram_block1a3.PORTBADDR2
address_b[2] => ram_block1a4.PORTBADDR2
address_b[2] => ram_block1a5.PORTBADDR2
address_b[2] => ram_block1a6.PORTBADDR2
address_b[2] => ram_block1a7.PORTBADDR2
address_b[2] => ram_block1a8.PORTBADDR2
address_b[3] => ram_block1a0.PORTBADDR3
address_b[3] => ram_block1a1.PORTBADDR3
address_b[3] => ram_block1a2.PORTBADDR3
address_b[3] => ram_block1a3.PORTBADDR3
address_b[3] => ram_block1a4.PORTBADDR3
address_b[3] => ram_block1a5.PORTBADDR3
address_b[3] => ram_block1a6.PORTBADDR3
address_b[3] => ram_block1a7.PORTBADDR3
address_b[3] => ram_block1a8.PORTBADDR3
address_b[4] => ram_block1a0.PORTBADDR4
address_b[4] => ram_block1a1.PORTBADDR4
address_b[4] => ram_block1a2.PORTBADDR4
address_b[4] => ram_block1a3.PORTBADDR4
address_b[4] => ram_block1a4.PORTBADDR4
address_b[4] => ram_block1a5.PORTBADDR4
address_b[4] => ram_block1a6.PORTBADDR4
address_b[4] => ram_block1a7.PORTBADDR4
address_b[4] => ram_block1a8.PORTBADDR4
address_b[5] => ram_block1a0.PORTBADDR5
address_b[5] => ram_block1a1.PORTBADDR5
address_b[5] => ram_block1a2.PORTBADDR5
address_b[5] => ram_block1a3.PORTBADDR5
address_b[5] => ram_block1a4.PORTBADDR5
address_b[5] => ram_block1a5.PORTBADDR5
address_b[5] => ram_block1a6.PORTBADDR5
address_b[5] => ram_block1a7.PORTBADDR5
address_b[5] => ram_block1a8.PORTBADDR5
address_b[6] => ram_block1a0.PORTBADDR6
address_b[6] => ram_block1a1.PORTBADDR6
address_b[6] => ram_block1a2.PORTBADDR6
address_b[6] => ram_block1a3.PORTBADDR6
address_b[6] => ram_block1a4.PORTBADDR6
address_b[6] => ram_block1a5.PORTBADDR6
address_b[6] => ram_block1a6.PORTBADDR6
address_b[6] => ram_block1a7.PORTBADDR6
address_b[6] => ram_block1a8.PORTBADDR6
address_b[7] => ram_block1a0.PORTBADDR7
address_b[7] => ram_block1a1.PORTBADDR7
address_b[7] => ram_block1a2.PORTBADDR7
address_b[7] => ram_block1a3.PORTBADDR7
address_b[7] => ram_block1a4.PORTBADDR7
address_b[7] => ram_block1a5.PORTBADDR7
address_b[7] => ram_block1a6.PORTBADDR7
address_b[7] => ram_block1a7.PORTBADDR7
address_b[7] => ram_block1a8.PORTBADDR7
address_b[8] => ram_block1a0.PORTBADDR8
address_b[8] => ram_block1a1.PORTBADDR8
address_b[8] => ram_block1a2.PORTBADDR8
address_b[8] => ram_block1a3.PORTBADDR8
address_b[8] => ram_block1a4.PORTBADDR8
address_b[8] => ram_block1a5.PORTBADDR8
address_b[8] => ram_block1a6.PORTBADDR8
address_b[8] => ram_block1a7.PORTBADDR8
address_b[8] => ram_block1a8.PORTBADDR8
address_b[9] => ram_block1a0.PORTBADDR9
address_b[9] => ram_block1a1.PORTBADDR9
address_b[9] => ram_block1a2.PORTBADDR9
address_b[9] => ram_block1a3.PORTBADDR9
address_b[9] => ram_block1a4.PORTBADDR9
address_b[9] => ram_block1a5.PORTBADDR9
address_b[9] => ram_block1a6.PORTBADDR9
address_b[9] => ram_block1a7.PORTBADDR9
address_b[9] => ram_block1a8.PORTBADDR9
address_b[10] => ram_block1a0.PORTBADDR10
address_b[10] => ram_block1a1.PORTBADDR10
address_b[10] => ram_block1a2.PORTBADDR10
address_b[10] => ram_block1a3.PORTBADDR10
address_b[10] => ram_block1a4.PORTBADDR10
address_b[10] => ram_block1a5.PORTBADDR10
address_b[10] => ram_block1a6.PORTBADDR10
address_b[10] => ram_block1a7.PORTBADDR10
address_b[10] => ram_block1a8.PORTBADDR10
address_b[11] => ram_block1a0.PORTBADDR11
address_b[11] => ram_block1a1.PORTBADDR11
address_b[11] => ram_block1a2.PORTBADDR11
address_b[11] => ram_block1a3.PORTBADDR11
address_b[11] => ram_block1a4.PORTBADDR11
address_b[11] => ram_block1a5.PORTBADDR11
address_b[11] => ram_block1a6.PORTBADDR11
address_b[11] => ram_block1a7.PORTBADDR11
address_b[11] => ram_block1a8.PORTBADDR11
address_b[12] => ram_block1a0.PORTBADDR12
address_b[12] => ram_block1a1.PORTBADDR12
address_b[12] => ram_block1a2.PORTBADDR12
address_b[12] => ram_block1a3.PORTBADDR12
address_b[12] => ram_block1a4.PORTBADDR12
address_b[12] => ram_block1a5.PORTBADDR12
address_b[13] => address_reg_b[0].DATAIN
address_b[13] => decode_01a:rden_decode_b.data[0]
address_b[14] => address_reg_b[1].DATAIN
address_b[14] => decode_01a:rden_decode_b.data[1]
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
clock0 => ram_block1a6.CLK0
clock0 => ram_block1a7.CLK0
clock0 => ram_block1a8.CLK0
clock1 => ram_block1a0.CLK1
clock1 => ram_block1a1.CLK1
clock1 => ram_block1a2.CLK1
clock1 => ram_block1a3.CLK1
clock1 => ram_block1a4.CLK1
clock1 => ram_block1a5.CLK1
clock1 => ram_block1a6.CLK1
clock1 => ram_block1a7.CLK1
clock1 => ram_block1a8.CLK1
clock1 => address_reg_b[1].CLK
clock1 => address_reg_b[0].CLK
clock1 => out_address_reg_b[1].CLK
clock1 => out_address_reg_b[0].CLK
data_a[0] => ram_block1a0.PORTADATAIN
data_a[0] => ram_block1a3.PORTADATAIN
data_a[0] => ram_block1a6.PORTADATAIN
data_a[1] => ram_block1a1.PORTADATAIN
data_a[1] => ram_block1a4.PORTADATAIN
data_a[1] => ram_block1a7.PORTADATAIN
data_a[2] => ram_block1a2.PORTADATAIN
data_a[2] => ram_block1a5.PORTADATAIN
data_a[2] => ram_block1a8.PORTADATAIN
q_b[0] <= mux_ifb:mux3.result[0]
q_b[1] <= mux_ifb:mux3.result[1]
q_b[2] <= mux_ifb:mux3.result[2]
wren_a => decode_7la:decode2.enable
wren_a => decode_7la:wren_decode_a.enable


|snake_2|part2:u0|vga_adapter:a0|altsyncram:VideoMemory|altsyncram_m6m1:auto_generated|decode_7la:decode2
data[0] => w_anode105w[1].IN0
data[0] => w_anode118w[1].IN1
data[0] => w_anode126w[1].IN0
data[0] => w_anode134w[1].IN1
data[1] => w_anode105w[2].IN0
data[1] => w_anode118w[2].IN0
data[1] => w_anode126w[2].IN1
data[1] => w_anode134w[2].IN1
enable => w_anode105w[1].IN0
enable => w_anode118w[1].IN0
enable => w_anode126w[1].IN0
enable => w_anode134w[1].IN0
eq[0] <= w_anode105w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[1] <= w_anode118w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[2] <= w_anode126w[2].DB_MAX_OUTPUT_PORT_TYPE


|snake_2|part2:u0|vga_adapter:a0|altsyncram:VideoMemory|altsyncram_m6m1:auto_generated|decode_01a:rden_decode_b
data[0] => w_anode143w[1].IN0
data[0] => w_anode157w[1].IN1
data[0] => w_anode166w[1].IN0
data[0] => w_anode175w[1].IN1
data[1] => w_anode143w[2].IN0
data[1] => w_anode157w[2].IN0
data[1] => w_anode166w[2].IN1
data[1] => w_anode175w[2].IN1
eq[0] <= w_anode143w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[1] <= w_anode157w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[2] <= w_anode166w[2].DB_MAX_OUTPUT_PORT_TYPE


|snake_2|part2:u0|vga_adapter:a0|altsyncram:VideoMemory|altsyncram_m6m1:auto_generated|decode_7la:wren_decode_a
data[0] => w_anode105w[1].IN0
data[0] => w_anode118w[1].IN1
data[0] => w_anode126w[1].IN0
data[0] => w_anode134w[1].IN1
data[1] => w_anode105w[2].IN0
data[1] => w_anode118w[2].IN0
data[1] => w_anode126w[2].IN1
data[1] => w_anode134w[2].IN1
enable => w_anode105w[1].IN0
enable => w_anode118w[1].IN0
enable => w_anode126w[1].IN0
enable => w_anode134w[1].IN0
eq[0] <= w_anode105w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[1] <= w_anode118w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[2] <= w_anode126w[2].DB_MAX_OUTPUT_PORT_TYPE


|snake_2|part2:u0|vga_adapter:a0|altsyncram:VideoMemory|altsyncram_m6m1:auto_generated|mux_ifb:mux3
data[0] => data0_wire[0].IN0
data[1] => data0_wire[1].IN0
data[2] => data0_wire[2].IN0
data[3] => data1_wire[0].IN0
data[4] => data1_wire[1].IN0
data[5] => data1_wire[2].IN0
data[6] => data2_wire[0].IN0
data[7] => data2_wire[1].IN0
data[8] => data2_wire[2].IN0
result[0] <= result_node[0].DB_MAX_OUTPUT_PORT_TYPE
result[1] <= result_node[1].DB_MAX_OUTPUT_PORT_TYPE
result[2] <= result_node[2].DB_MAX_OUTPUT_PORT_TYPE
sel[0] => data0_wire[2].IN0
sel[0] => data1_wire[2].IN1
sel[0] => data1_wire[1].IN1
sel[0] => data1_wire[0].IN1
sel[1] => data2_wire[2].IN1
sel[1] => data2_wire[1].IN1
sel[1] => data2_wire[0].IN1
sel[1] => _.IN0


|snake_2|part2:u0|vga_adapter:a0|vga_pll:mypll
clock_in => clock_input_bus[0].IN1
clock_out <= altpll:altpll_component.clk


|snake_2|part2:u0|vga_adapter:a0|vga_pll:mypll|altpll:altpll_component
inclk[0] => altpll_80u:auto_generated.inclk[0]
inclk[1] => altpll_80u:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => ~NO_FANOUT~
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
clk[5] <= clk[5].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|snake_2|part2:u0|vga_adapter:a0|vga_pll:mypll|altpll:altpll_component|altpll_80u:auto_generated
clk[0] <= generic_pll1.O_OUTCLK
clk[1] <= <GND>
clk[2] <= <GND>
clk[3] <= <GND>
clk[4] <= <GND>
clk[5] <= <GND>
fbout <= generic_pll1.O_FBOUTCLK
inclk[0] => generic_pll1.I_REFCLK
inclk[1] => ~NO_FANOUT~
locked <= generic_pll1.LOCKED


|snake_2|part2:u0|vga_adapter:a0|vga_controller:controller
vga_clock => VGA_BLANK~reg0.CLK
vga_clock => VGA_VS~reg0.CLK
vga_clock => VGA_HS~reg0.CLK
vga_clock => VGA_BLANK1.CLK
vga_clock => VGA_VS1.CLK
vga_clock => VGA_HS1.CLK
vga_clock => yCounter[0].CLK
vga_clock => yCounter[1].CLK
vga_clock => yCounter[2].CLK
vga_clock => yCounter[3].CLK
vga_clock => yCounter[4].CLK
vga_clock => yCounter[5].CLK
vga_clock => yCounter[6].CLK
vga_clock => yCounter[7].CLK
vga_clock => yCounter[8].CLK
vga_clock => yCounter[9].CLK
vga_clock => xCounter[0].CLK
vga_clock => xCounter[1].CLK
vga_clock => xCounter[2].CLK
vga_clock => xCounter[3].CLK
vga_clock => xCounter[4].CLK
vga_clock => xCounter[5].CLK
vga_clock => xCounter[6].CLK
vga_clock => xCounter[7].CLK
vga_clock => xCounter[8].CLK
vga_clock => xCounter[9].CLK
vga_clock => VGA_CLK.DATAIN
resetn => xCounter[0].ACLR
resetn => xCounter[1].ACLR
resetn => xCounter[2].ACLR
resetn => xCounter[3].ACLR
resetn => xCounter[4].ACLR
resetn => xCounter[5].ACLR
resetn => xCounter[6].ACLR
resetn => xCounter[7].ACLR
resetn => xCounter[8].ACLR
resetn => xCounter[9].ACLR
resetn => yCounter[0].ACLR
resetn => yCounter[1].ACLR
resetn => yCounter[2].ACLR
resetn => yCounter[3].ACLR
resetn => yCounter[4].ACLR
resetn => yCounter[5].ACLR
resetn => yCounter[6].ACLR
resetn => yCounter[7].ACLR
resetn => yCounter[8].ACLR
resetn => yCounter[9].ACLR
pixel_colour[0] => VGA_B[0].DATAIN
pixel_colour[0] => VGA_B[9].DATAIN
pixel_colour[0] => VGA_B[8].DATAIN
pixel_colour[0] => VGA_B[7].DATAIN
pixel_colour[0] => VGA_B[6].DATAIN
pixel_colour[0] => VGA_B[5].DATAIN
pixel_colour[0] => VGA_B[4].DATAIN
pixel_colour[0] => VGA_B[3].DATAIN
pixel_colour[0] => VGA_B[2].DATAIN
pixel_colour[0] => VGA_B[1].DATAIN
pixel_colour[1] => VGA_G[0].DATAIN
pixel_colour[1] => VGA_G[9].DATAIN
pixel_colour[1] => VGA_G[8].DATAIN
pixel_colour[1] => VGA_G[7].DATAIN
pixel_colour[1] => VGA_G[6].DATAIN
pixel_colour[1] => VGA_G[5].DATAIN
pixel_colour[1] => VGA_G[4].DATAIN
pixel_colour[1] => VGA_G[3].DATAIN
pixel_colour[1] => VGA_G[2].DATAIN
pixel_colour[1] => VGA_G[1].DATAIN
pixel_colour[2] => VGA_R[0].DATAIN
pixel_colour[2] => VGA_R[9].DATAIN
pixel_colour[2] => VGA_R[8].DATAIN
pixel_colour[2] => VGA_R[7].DATAIN
pixel_colour[2] => VGA_R[6].DATAIN
pixel_colour[2] => VGA_R[5].DATAIN
pixel_colour[2] => VGA_R[4].DATAIN
pixel_colour[2] => VGA_R[3].DATAIN
pixel_colour[2] => VGA_R[2].DATAIN
pixel_colour[2] => VGA_R[1].DATAIN
memory_address[0] <= vga_address_translator:controller_translator.mem_address
memory_address[1] <= vga_address_translator:controller_translator.mem_address
memory_address[2] <= vga_address_translator:controller_translator.mem_address
memory_address[3] <= vga_address_translator:controller_translator.mem_address
memory_address[4] <= vga_address_translator:controller_translator.mem_address
memory_address[5] <= vga_address_translator:controller_translator.mem_address
memory_address[6] <= vga_address_translator:controller_translator.mem_address
memory_address[7] <= vga_address_translator:controller_translator.mem_address
memory_address[8] <= vga_address_translator:controller_translator.mem_address
memory_address[9] <= vga_address_translator:controller_translator.mem_address
memory_address[10] <= vga_address_translator:controller_translator.mem_address
memory_address[11] <= vga_address_translator:controller_translator.mem_address
memory_address[12] <= vga_address_translator:controller_translator.mem_address
memory_address[13] <= vga_address_translator:controller_translator.mem_address
memory_address[14] <= vga_address_translator:controller_translator.mem_address
VGA_R[0] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[1] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[2] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[3] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[4] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[5] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[6] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[7] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[8] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[9] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[0] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[1] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[2] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[3] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[4] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[5] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[6] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[7] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[8] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[9] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[0] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[1] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[2] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[3] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[4] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[5] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[6] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[7] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[8] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[9] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_HS <= VGA_HS~reg0.DB_MAX_OUTPUT_PORT_TYPE
VGA_VS <= VGA_VS~reg0.DB_MAX_OUTPUT_PORT_TYPE
VGA_BLANK <= VGA_BLANK~reg0.DB_MAX_OUTPUT_PORT_TYPE
VGA_SYNC <= <VCC>
VGA_CLK <= vga_clock.DB_MAX_OUTPUT_PORT_TYPE


|snake_2|part2:u0|vga_adapter:a0|vga_controller:controller|vga_address_translator:controller_translator
x[0] => mem_address[0].DATAIN
x[1] => mem_address[1].DATAIN
x[2] => mem_address[2].DATAIN
x[3] => mem_address[3].DATAIN
x[4] => mem_address[4].DATAIN
x[5] => Add1.IN18
x[6] => Add1.IN17
x[7] => Add1.IN16
y[0] => Add0.IN14
y[0] => Add1.IN20
y[1] => Add0.IN13
y[1] => Add1.IN19
y[2] => Add0.IN11
y[2] => Add0.IN12
y[3] => Add0.IN9
y[3] => Add0.IN10
y[4] => Add0.IN7
y[4] => Add0.IN8
y[5] => Add0.IN5
y[5] => Add0.IN6
y[6] => Add0.IN3
y[6] => Add0.IN4
mem_address[0] <= x[0].DB_MAX_OUTPUT_PORT_TYPE
mem_address[1] <= x[1].DB_MAX_OUTPUT_PORT_TYPE
mem_address[2] <= x[2].DB_MAX_OUTPUT_PORT_TYPE
mem_address[3] <= x[3].DB_MAX_OUTPUT_PORT_TYPE
mem_address[4] <= x[4].DB_MAX_OUTPUT_PORT_TYPE
mem_address[5] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[6] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[7] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[8] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[9] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[10] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[11] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[12] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[13] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[14] <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|snake_2|part2:u0|control:C0
clk => current_state~1.DATAIN
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
start => Selector0.IN2
start => next_state.START.DATAB
start => Selector1.IN1
dir[0] => Equal0.IN1
dir[0] => Equal1.IN0
dir[1] => Equal0.IN0
dir[1] => Equal1.IN1
left <= left.DB_MAX_OUTPUT_PORT_TYPE
right <= right.DB_MAX_OUTPUT_PORT_TYPE
up <= up.DB_MAX_OUTPUT_PORT_TYPE
down <= down.DB_MAX_OUTPUT_PORT_TYPE


|snake_2|part2:u0|datapath:D0
clk => clk.IN2
resetn => resetn.IN2
left => x1.OUTPUTSELECT
left => x1.OUTPUTSELECT
left => x1.OUTPUTSELECT
left => x1.OUTPUTSELECT
left => x1.OUTPUTSELECT
left => x1.OUTPUTSELECT
right => x1.OUTPUTSELECT
right => x1.OUTPUTSELECT
right => x1.OUTPUTSELECT
right => x1.OUTPUTSELECT
right => x1.OUTPUTSELECT
right => x1.OUTPUTSELECT
up => y1.OUTPUTSELECT
up => y1.OUTPUTSELECT
up => y1.OUTPUTSELECT
up => y1.OUTPUTSELECT
up => y1.OUTPUTSELECT
down => y1.OUTPUTSELECT
down => y1.OUTPUTSELECT
down => y1.OUTPUTSELECT
down => y1.OUTPUTSELECT
down => y1.OUTPUTSELECT
foodx[0] => headx.DATAB
foodx[0] => Equal0.IN7
foodx[1] => headx.DATAB
foodx[1] => Equal0.IN6
foodx[2] => headx.DATAB
foodx[2] => Equal0.IN5
foodx[3] => headx.DATAB
foodx[3] => Equal0.IN4
foodx[4] => headx.DATAB
foodx[4] => Equal0.IN3
foodx[5] => headx.DATAB
foodx[5] => Equal0.IN2
foodx[6] => headx.DATAB
foodx[6] => Equal0.IN1
foody[0] => heady.DATAB
foody[0] => Equal1.IN6
foody[1] => heady.DATAB
foody[1] => Equal1.IN5
foody[2] => heady.DATAB
foody[2] => Equal1.IN4
foody[3] => heady.DATAB
foody[3] => Equal1.IN3
foody[4] => heady.DATAB
foody[4] => Equal1.IN2
foody[5] => heady.DATAB
foody[5] => Equal1.IN1
foody[6] => heady.DATAB
foody[6] => Equal1.IN0
food_gen <= food_gen~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_out[0] <= x_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_out[1] <= x_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_out[2] <= x_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_out[3] <= x_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_out[4] <= x_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_out[5] <= x_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_out[6] <= x_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_out[7] <= x_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y_out[0] <= y_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y_out[1] <= y_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y_out[2] <= y_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y_out[3] <= y_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y_out[4] <= y_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y_out[5] <= y_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y_out[6] <= y_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
colour[0] <= colour[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
colour[1] <= colour[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
colour[2] <= colour[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|snake_2|part2:u0|datapath:D0|counter16:d0
resetn => out.OUTPUTSELECT
resetn => out.OUTPUTSELECT
resetn => out.OUTPUTSELECT
resetn => out.OUTPUTSELECT
clk => out[0]~reg0.CLK
clk => out[1]~reg0.CLK
clk => out[2]~reg0.CLK
clk => out[3]~reg0.CLK
enable => out.OUTPUTSELECT
enable => out.OUTPUTSELECT
enable => out.OUTPUTSELECT
enable => out.OUTPUTSELECT
out[0] <= out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|snake_2|part2:u0|datapath:D0|counter16:p0
resetn => out.OUTPUTSELECT
resetn => out.OUTPUTSELECT
resetn => out.OUTPUTSELECT
resetn => out.OUTPUTSELECT
clk => out[0]~reg0.CLK
clk => out[1]~reg0.CLK
clk => out[2]~reg0.CLK
clk => out[3]~reg0.CLK
enable => out.OUTPUTSELECT
enable => out.OUTPUTSELECT
enable => out.OUTPUTSELECT
enable => out.OUTPUTSELECT
out[0] <= out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|snake_2|part2:u0|keyboard_reader:k0
left => out[1].IN0
right => out[1].IN1
right => out[0].DATAA
up => out[0].OUTPUTSELECT
up => out[1].IN1
up => out[1].DATAA
down => out[0].OUTPUTSELECT
down => out[1].IN1
down => out[1].OUTPUTSELECT
out[0] <= out[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1]$latch.DB_MAX_OUTPUT_PORT_TYPE


|snake_2|part2:u0|keyboard_tracker:KB0
clock => clock.IN1
reset => _.IN1
reset => curr_state.OUTPUTSELECT
reset => curr_state.OUTPUTSELECT
reset => curr_state.OUTPUTSELECT
reset => curr_state.OUTPUTSELECT
reset => w_press.OUTPUTSELECT
reset => a_press.OUTPUTSELECT
reset => s_press.OUTPUTSELECT
reset => d_press.OUTPUTSELECT
reset => left_press.OUTPUTSELECT
reset => right_press.OUTPUTSELECT
reset => up_press.OUTPUTSELECT
reset => down_press.OUTPUTSELECT
reset => space_press.OUTPUTSELECT
reset => enter_press.OUTPUTSELECT
reset => w_lock.OUTPUTSELECT
reset => a_lock.OUTPUTSELECT
reset => s_lock.OUTPUTSELECT
reset => d_lock.OUTPUTSELECT
reset => left_lock.OUTPUTSELECT
reset => right_lock.OUTPUTSELECT
reset => up_lock.OUTPUTSELECT
reset => down_lock.OUTPUTSELECT
reset => space_lock.OUTPUTSELECT
reset => enter_lock.OUTPUTSELECT
PS2_CLK <> PS2_Controller:core_driver.PS2_CLK
PS2_DAT <> PS2_Controller:core_driver.PS2_DAT
w <= w.DB_MAX_OUTPUT_PORT_TYPE
a <= a.DB_MAX_OUTPUT_PORT_TYPE
s <= s.DB_MAX_OUTPUT_PORT_TYPE
d <= d.DB_MAX_OUTPUT_PORT_TYPE
left <= left.DB_MAX_OUTPUT_PORT_TYPE
right <= right.DB_MAX_OUTPUT_PORT_TYPE
up <= up.DB_MAX_OUTPUT_PORT_TYPE
down <= down.DB_MAX_OUTPUT_PORT_TYPE
space <= space.DB_MAX_OUTPUT_PORT_TYPE
enter <= enter.DB_MAX_OUTPUT_PORT_TYPE


|snake_2|part2:u0|keyboard_tracker:KB0|PS2_Controller:core_driver
CLOCK_50 => CLOCK_50.IN2
reset => reset.IN2
the_command[0] => the_command_w[0].IN1
the_command[1] => the_command_w[1].IN1
the_command[2] => the_command_w[2].IN1
the_command[3] => the_command_w[3].IN1
the_command[4] => the_command_w[4].IN1
the_command[5] => the_command_w[5].IN1
the_command[6] => the_command_w[6].IN1
the_command[7] => the_command_w[7].IN1
send_command => send_command_w.IN1
PS2_CLK <> Altera_UP_PS2_Command_Out:PS2_Command_Out.PS2_CLK
PS2_DAT <> Altera_UP_PS2_Command_Out:PS2_Command_Out.PS2_DAT
command_was_sent <= Altera_UP_PS2_Command_Out:PS2_Command_Out.command_was_sent
error_communication_timed_out <= Altera_UP_PS2_Command_Out:PS2_Command_Out.error_communication_timed_out
received_data[0] <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data
received_data[1] <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data
received_data[2] <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data
received_data[3] <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data
received_data[4] <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data
received_data[5] <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data
received_data[6] <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data
received_data[7] <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data
received_data_en <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data_en


|snake_2|part2:u0|keyboard_tracker:KB0|PS2_Controller:core_driver|Altera_UP_PS2_Data_In:PS2_Data_In
clk => received_data_en~reg0.CLK
clk => received_data[0]~reg0.CLK
clk => received_data[1]~reg0.CLK
clk => received_data[2]~reg0.CLK
clk => received_data[3]~reg0.CLK
clk => received_data[4]~reg0.CLK
clk => received_data[5]~reg0.CLK
clk => received_data[6]~reg0.CLK
clk => received_data[7]~reg0.CLK
clk => data_shift_reg[0].CLK
clk => data_shift_reg[1].CLK
clk => data_shift_reg[2].CLK
clk => data_shift_reg[3].CLK
clk => data_shift_reg[4].CLK
clk => data_shift_reg[5].CLK
clk => data_shift_reg[6].CLK
clk => data_shift_reg[7].CLK
clk => data_count[0].CLK
clk => data_count[1].CLK
clk => data_count[2].CLK
clk => data_count[3].CLK
clk => s_ps2_receiver~1.DATAIN
reset => s_ps2_receiver.OUTPUTSELECT
reset => s_ps2_receiver.OUTPUTSELECT
reset => s_ps2_receiver.OUTPUTSELECT
reset => s_ps2_receiver.OUTPUTSELECT
reset => s_ps2_receiver.OUTPUTSELECT
reset => data_count.OUTPUTSELECT
reset => data_count.OUTPUTSELECT
reset => data_count.OUTPUTSELECT
reset => data_count.OUTPUTSELECT
reset => data_shift_reg.OUTPUTSELECT
reset => data_shift_reg.OUTPUTSELECT
reset => data_shift_reg.OUTPUTSELECT
reset => data_shift_reg.OUTPUTSELECT
reset => data_shift_reg.OUTPUTSELECT
reset => data_shift_reg.OUTPUTSELECT
reset => data_shift_reg.OUTPUTSELECT
reset => data_shift_reg.OUTPUTSELECT
reset => received_data.OUTPUTSELECT
reset => received_data.OUTPUTSELECT
reset => received_data.OUTPUTSELECT
reset => received_data.OUTPUTSELECT
reset => received_data.OUTPUTSELECT
reset => received_data.OUTPUTSELECT
reset => received_data.OUTPUTSELECT
reset => received_data.OUTPUTSELECT
reset => received_data_en.OUTPUTSELECT
wait_for_incoming_data => always1.IN1
wait_for_incoming_data => ns_ps2_receiver.DATAA
wait_for_incoming_data => ns_ps2_receiver.DATAA
start_receiving_data => always1.IN1
ps2_clk_posedge => always1.IN0
ps2_clk_posedge => always1.IN1
ps2_clk_posedge => always2.IN0
ps2_clk_posedge => always5.IN0
ps2_clk_posedge => Selector4.IN3
ps2_clk_posedge => Selector0.IN4
ps2_clk_posedge => Selector4.IN1
ps2_clk_posedge => Selector3.IN2
ps2_clk_negedge => ~NO_FANOUT~
ps2_data => data_shift_reg.DATAB
ps2_data => always1.IN1
received_data[0] <= received_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[1] <= received_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[2] <= received_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[3] <= received_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[4] <= received_data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[5] <= received_data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[6] <= received_data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[7] <= received_data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data_en <= received_data_en~reg0.DB_MAX_OUTPUT_PORT_TYPE


|snake_2|part2:u0|keyboard_tracker:KB0|PS2_Controller:core_driver|Altera_UP_PS2_Command_Out:PS2_Command_Out
clk => error_communication_timed_out~reg0.CLK
clk => command_was_sent~reg0.CLK
clk => cur_bit[0].CLK
clk => cur_bit[1].CLK
clk => cur_bit[2].CLK
clk => cur_bit[3].CLK
clk => transfer_counter[1].CLK
clk => transfer_counter[2].CLK
clk => transfer_counter[3].CLK
clk => transfer_counter[4].CLK
clk => transfer_counter[5].CLK
clk => transfer_counter[6].CLK
clk => transfer_counter[7].CLK
clk => transfer_counter[8].CLK
clk => transfer_counter[9].CLK
clk => transfer_counter[10].CLK
clk => transfer_counter[11].CLK
clk => transfer_counter[12].CLK
clk => transfer_counter[13].CLK
clk => transfer_counter[14].CLK
clk => transfer_counter[15].CLK
clk => transfer_counter[16].CLK
clk => transfer_counter[17].CLK
clk => waiting_counter[1].CLK
clk => waiting_counter[2].CLK
clk => waiting_counter[3].CLK
clk => waiting_counter[4].CLK
clk => waiting_counter[5].CLK
clk => waiting_counter[6].CLK
clk => waiting_counter[7].CLK
clk => waiting_counter[8].CLK
clk => waiting_counter[9].CLK
clk => waiting_counter[10].CLK
clk => waiting_counter[11].CLK
clk => waiting_counter[12].CLK
clk => waiting_counter[13].CLK
clk => waiting_counter[14].CLK
clk => waiting_counter[15].CLK
clk => waiting_counter[16].CLK
clk => waiting_counter[17].CLK
clk => waiting_counter[18].CLK
clk => waiting_counter[19].CLK
clk => waiting_counter[20].CLK
clk => command_initiate_counter[1].CLK
clk => command_initiate_counter[2].CLK
clk => command_initiate_counter[3].CLK
clk => command_initiate_counter[4].CLK
clk => command_initiate_counter[5].CLK
clk => command_initiate_counter[6].CLK
clk => command_initiate_counter[7].CLK
clk => command_initiate_counter[8].CLK
clk => command_initiate_counter[9].CLK
clk => command_initiate_counter[10].CLK
clk => command_initiate_counter[11].CLK
clk => command_initiate_counter[12].CLK
clk => command_initiate_counter[13].CLK
clk => ps2_command[0].CLK
clk => ps2_command[1].CLK
clk => ps2_command[2].CLK
clk => ps2_command[3].CLK
clk => ps2_command[4].CLK
clk => ps2_command[5].CLK
clk => ps2_command[6].CLK
clk => ps2_command[7].CLK
clk => ps2_command[8].CLK
clk => s_ps2_transmitter~1.DATAIN
reset => s_ps2_transmitter.OUTPUTSELECT
reset => s_ps2_transmitter.OUTPUTSELECT
reset => s_ps2_transmitter.OUTPUTSELECT
reset => s_ps2_transmitter.OUTPUTSELECT
reset => s_ps2_transmitter.OUTPUTSELECT
reset => s_ps2_transmitter.OUTPUTSELECT
reset => s_ps2_transmitter.OUTPUTSELECT
reset => s_ps2_transmitter.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => cur_bit.OUTPUTSELECT
reset => cur_bit.OUTPUTSELECT
reset => cur_bit.OUTPUTSELECT
reset => cur_bit.OUTPUTSELECT
reset => command_was_sent.OUTPUTSELECT
reset => error_communication_timed_out.OUTPUTSELECT
the_command[0] => WideXor0.IN0
the_command[0] => ps2_command.DATAB
the_command[1] => WideXor0.IN1
the_command[1] => ps2_command.DATAB
the_command[2] => WideXor0.IN2
the_command[2] => ps2_command.DATAB
the_command[3] => WideXor0.IN3
the_command[3] => ps2_command.DATAB
the_command[4] => WideXor0.IN4
the_command[4] => ps2_command.DATAB
the_command[5] => WideXor0.IN5
the_command[5] => ps2_command.DATAB
the_command[6] => WideXor0.IN6
the_command[6] => ps2_command.DATAB
the_command[7] => WideXor0.IN7
the_command[7] => ps2_command.DATAB
send_command => Selector1.IN3
send_command => Selector6.IN2
send_command => Selector7.IN6
send_command => command_was_sent.OUTPUTSELECT
send_command => error_communication_timed_out.OUTPUTSELECT
send_command => Selector0.IN1
ps2_clk_posedge => ns_ps2_transmitter.OUTPUTSELECT
ps2_clk_posedge => ns_ps2_transmitter.OUTPUTSELECT
ps2_clk_posedge => Selector6.IN3
ps2_clk_negedge => ns_ps2_transmitter.OUTPUTSELECT
ps2_clk_negedge => ns_ps2_transmitter.OUTPUTSELECT
ps2_clk_negedge => always1.IN1
ps2_clk_negedge => ns_ps2_transmitter.OUTPUTSELECT
ps2_clk_negedge => ns_ps2_transmitter.OUTPUTSELECT
ps2_clk_negedge => always6.IN0
ps2_clk_negedge => Selector3.IN3
ps2_clk_negedge => Selector5.IN3
PS2_CLK <> PS2_CLK
PS2_DAT <> PS2_DAT
command_was_sent <= command_was_sent~reg0.DB_MAX_OUTPUT_PORT_TYPE
error_communication_timed_out <= error_communication_timed_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|snake_2|part2:u0|RateDivider:r0
cout <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
d[0] => count.DATAB
d[0] => count.DATAB
d[1] => count.DATAB
d[1] => count.DATAB
d[2] => count.DATAB
d[2] => count.DATAB
d[3] => count.DATAB
d[3] => count.DATAB
d[4] => count.DATAB
d[4] => count.DATAB
d[5] => count.DATAB
d[5] => count.DATAB
d[6] => count.DATAB
d[6] => count.DATAB
d[7] => count.DATAB
d[7] => count.DATAB
d[8] => count.DATAB
d[8] => count.DATAB
d[9] => count.DATAB
d[9] => count.DATAB
d[10] => count.DATAB
d[10] => count.DATAB
d[11] => count.DATAB
d[11] => count.DATAB
d[12] => count.DATAB
d[12] => count.DATAB
d[13] => count.DATAB
d[13] => count.DATAB
d[14] => count.DATAB
d[14] => count.DATAB
d[15] => count.DATAB
d[15] => count.DATAB
d[16] => count.DATAB
d[16] => count.DATAB
d[17] => count.DATAB
d[17] => count.DATAB
d[18] => count.DATAB
d[18] => count.DATAB
d[19] => count.DATAB
d[19] => count.DATAB
d[20] => count.DATAB
d[20] => count.DATAB
d[21] => count.DATAB
d[21] => count.DATAB
d[22] => count.DATAB
d[22] => count.DATAB
d[23] => count.DATAB
d[23] => count.DATAB
d[24] => count.DATAB
d[24] => count.DATAB
d[25] => count.DATAB
d[25] => count.DATAB
d[26] => count.DATAB
d[26] => count.DATAB
d[27] => count.DATAB
d[27] => count.DATAB
enable_d => count.OUTPUTSELECT
enable_d => count.OUTPUTSELECT
enable_d => count.OUTPUTSELECT
enable_d => count.OUTPUTSELECT
enable_d => count.OUTPUTSELECT
enable_d => count.OUTPUTSELECT
enable_d => count.OUTPUTSELECT
enable_d => count.OUTPUTSELECT
enable_d => count.OUTPUTSELECT
enable_d => count.OUTPUTSELECT
enable_d => count.OUTPUTSELECT
enable_d => count.OUTPUTSELECT
enable_d => count.OUTPUTSELECT
enable_d => count.OUTPUTSELECT
enable_d => count.OUTPUTSELECT
enable_d => count.OUTPUTSELECT
enable_d => count.OUTPUTSELECT
enable_d => count.OUTPUTSELECT
enable_d => count.OUTPUTSELECT
enable_d => count.OUTPUTSELECT
enable_d => count.OUTPUTSELECT
enable_d => count.OUTPUTSELECT
enable_d => count.OUTPUTSELECT
enable_d => count.OUTPUTSELECT
enable_d => count.OUTPUTSELECT
enable_d => count.OUTPUTSELECT
enable_d => count.OUTPUTSELECT
enable_d => count.OUTPUTSELECT


|snake_2|part2:u0|food_gen:comb_3
clk => y[0].CLK
clk => y[1].CLK
clk => y[2].CLK
clk => y[3].CLK
clk => y[4].CLK
clk => y[5].CLK
clk => y[6].CLK
clk => randomY[0]~reg0.CLK
clk => randomY[1]~reg0.CLK
clk => randomY[2]~reg0.CLK
clk => randomY[3]~reg0.CLK
clk => randomY[4]~reg0.CLK
clk => randomY[5]~reg0.CLK
clk => randomY[6]~reg0.CLK
clk => x[0].CLK
clk => x[1].CLK
clk => x[2].CLK
clk => x[3].CLK
clk => x[4].CLK
clk => x[5].CLK
clk => x[6].CLK
clk => randomX[0]~reg0.CLK
clk => randomX[1]~reg0.CLK
clk => randomX[2]~reg0.CLK
clk => randomX[3]~reg0.CLK
clk => randomX[4]~reg0.CLK
clk => randomX[5]~reg0.CLK
clk => randomX[6]~reg0.CLK
gen => y[6].ENA
gen => y[5].ENA
gen => y[4].ENA
gen => y[3].ENA
gen => y[2].ENA
gen => y[1].ENA
gen => y[0].ENA
gen => x[0].ENA
gen => randomY[0]~reg0.ENA
gen => randomY[1]~reg0.ENA
gen => randomY[2]~reg0.ENA
gen => randomY[3]~reg0.ENA
gen => randomY[4]~reg0.ENA
gen => randomY[5]~reg0.ENA
gen => randomY[6]~reg0.ENA
gen => x[1].ENA
gen => x[2].ENA
gen => x[3].ENA
gen => x[4].ENA
gen => x[5].ENA
gen => x[6].ENA
gen => randomX[0]~reg0.ENA
gen => randomX[1]~reg0.ENA
gen => randomX[2]~reg0.ENA
gen => randomX[3]~reg0.ENA
gen => randomX[4]~reg0.ENA
gen => randomX[5]~reg0.ENA
gen => randomX[6]~reg0.ENA
randomX[0] <= randomX[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
randomX[1] <= randomX[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
randomX[2] <= randomX[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
randomX[3] <= randomX[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
randomX[4] <= randomX[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
randomX[5] <= randomX[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
randomX[6] <= randomX[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
randomY[0] <= randomY[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
randomY[1] <= randomY[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
randomY[2] <= randomY[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
randomY[3] <= randomY[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
randomY[4] <= randomY[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
randomY[5] <= randomY[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
randomY[6] <= randomY[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE


